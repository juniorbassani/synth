(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{125:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return u}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,u=d["".concat(o,".").concat(m)]||d[m]||b[m]||i;return n?a.a.createElement(u,l(l({ref:t},s),{},{components:n})):a.a.createElement(u,l({ref:t},s))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},71:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return d}));var r=n(3),a=n(7),i=(n(0),n(125)),o=["components"],l={title:"Telemetry"},c={unversionedId:"other/telemetry",id:"other/telemetry",isDocsHomePage:!1,title:"Telemetry",description:"Synth collects de-identified usage data to help create a better product and user experience.",source:"@site/docs/other/telemetry.md",slug:"/other/telemetry",permalink:"/synth/other/telemetry",editUrl:"https://github.com/getsynth/synth/edit/master/docs/docs/other/telemetry.md",version:"current",sidebar:"docsSidebar",previous:{title:"series",permalink:"/synth/content/series"}},s=[{value:"Philosophy",id:"philosophy",children:[]},{value:"Enabling / Disabling Telemetry",id:"enabling--disabling-telemetry",children:[]},{value:"Where does the data go?",id:"where-does-the-data-go",children:[]},{value:"What does Synth collect?",id:"what-does-synth-collect",children:[]}],p={toc:s};function d(e){var t=e.components,n=Object(a.a)(e,o);return Object(i.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Synth collects de-identified usage data to help create a better product and user experience."),Object(i.b)("p",null,"Synth telemetry is ",Object(i.b)("strong",{parentName:"p"},"opt-in"),"; the user is explicity prompted at installation, asking if they would like to participate\nin de-identified data collection."),Object(i.b)("h2",{id:"philosophy"},"Philosophy"),Object(i.b)("p",null,"Below are a set of principles that guide the telemetry decisions made in Synth:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"It is made ",Object(i.b)("em",{parentName:"li"},"completely transparent")," that telemetry is going to be installed"),Object(i.b)("li",{parentName:"ol"},"It is made ",Object(i.b)("em",{parentName:"li"},"completely transparent")," as to what data we collect"),Object(i.b)("li",{parentName:"ol"},"No personally identifiable information is collected. (IP addresses are discarded at the Sink)"),Object(i.b)("li",{parentName:"ol"},"Nothing is collected unless the user explicitly opts-in.")),Object(i.b)("h2",{id:"enabling--disabling-telemetry"},"Enabling / Disabling Telemetry"),Object(i.b)("p",null,"Synth uses a configuration file under the user configuration directory (e.g. ",Object(i.b)("inlineCode",{parentName:"p"},"~/.config/synth/config.json")," on typical unix systems) as a marker for telemetry being enabled. This file\nalso contains the user's randomly generated unique ",Object(i.b)("inlineCode",{parentName:"p"},"distinct_id"),"."),Object(i.b)("p",null,"The user is prompted during the installation process about telemetry being enabled."),Object(i.b)("p",null,"Users can check if telemetry is enabled by running ",Object(i.b)("inlineCode",{parentName:"p"},"synth telemetry status"),"."),Object(i.b)("p",null,"Users can opt-out at any time by running ",Object(i.b)("inlineCode",{parentName:"p"},"synth telemetry disable"),"."),Object(i.b)("h2",{id:"where-does-the-data-go"},"Where does the data go?"),Object(i.b)("p",null,"All the telemetry data is collected in a ",Object(i.b)("a",{parentName:"p",href:"https://posthog.com/"},"Posthog")," instance run by the maintainers of Synth."),Object(i.b)("p",null,"If for whatever reason you would like the data associated with your UUID to be deleted, please contact ",Object(i.b)("inlineCode",{parentName:"p"},"opensource@getsynth.com"),"."),Object(i.b)("h2",{id:"what-does-synth-collect"},"What does Synth collect?"),Object(i.b)("p",null,"Synth's telemetry collects 6 fields:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"distinct_id"),": A randomly generated UUID stored at ",Object(i.b)("inlineCode",{parentName:"li"},"~/.config/synth/config.json")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"command"),": The command that was issued by the user. One\nof (",Object(i.b)("inlineCode",{parentName:"li"},"init | import | generate | telemetry::enabled | telemetry::disabled"),")"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"success"),": If the command issued succeeded or failed."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"version"),": The version of Synth being used. For example ",Object(i.b)("inlineCode",{parentName:"li"},"v0.4.3"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"os"),": The host operating system, for example 'linux'"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"timestamp"),": The time at which the command was issued. For example ",Object(i.b)("inlineCode",{parentName:"li"},"2021-05-06T16:13:40.084Z"),".")),Object(i.b)("p",null,"Below is a Synth schema generates telemetry events:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json",metastring:"synth",synth:!0},'{\n    "type": "object",\n    "distinct_id": {\n        "type": "string",\n        "uuid": {}\n    },\n    "command": {\n        "type": "string",\n        "categorical": {\n            "import": 1,\n            "generate": 10\n        }\n    },\n    "version": {\n        "type": "string",\n        "pattern": "v0\\\\.4\\\\.3"\n    },\n    "os": {\n        "type": "string",\n        "categorical": {\n            "linux": 10,\n            "mac os": 1\n        }\n    },\n    "timestamp": {\n      "type": "string",\n      "date_time": {\n        "format": "%Y-%m-%dT%H:%M:%S",\n        "subtype": "naive_date_time",\n        "begin": "2015-01-01T00:00:00",\n        "end": "2020-01-01T12:00:00"\n      }\n    }\n}\n')))}d.isMDXComponent=!0}}]);